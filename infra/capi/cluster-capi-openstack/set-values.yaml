# Copyright 2024 DCN

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: fn.kpt.dev/v1alpha1
kind: StarlarkRun
metadata:
  name: set-values
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    config.kubernetes.io/local-config: "true"
source: |-
  load("krmfn.star", "krmfn")

  def set_values(resources):
    for r in resources:
      if krmfn.match_gvk(r, "infra.nephio.org/v1alpha1", "WorkloadCluster"):
        new_cluster_name = r["spec"]["clusterName"]

        for r in resources:
          if krmfn.match_gvk(r, "v1", "Secret"):
            if r["metadata"]["name"] == "example-cloud-config":
              r["metadata"]["name"] = new_cluster_name + "-cloud-config"
          if krmfn.match_gvk(r, "bootstrap.cluster.x-k8s.io/v1beta1", "KubeadmConfigTemplate"):
            if r["metadata"]["name"] == "example-md-0":
              r["metadata"]["name"] = new_cluster_name + "-md-0"
          if krmfn.match_gvk(r, "cluster.x-k8s.io/v1beta1", "Cluster"):
            if r["metadata"]["name"] == "example":
              r["metadata"]["name"] = new_cluster_name
              r["spec"]["controlPlaneRef"]["name"] = new_cluster_name + "-control-plane"
              r["spec"]["infrastructureRef"]["name"] = new_cluster_name
          if krmfn.match_gvk(r, "cluster.x-k8s.io/v1beta1", "MachineDeployment"):
            if r["metadata"]["name"] == "example-md-0":
              r["metadata"]["name"] = new_cluster_name + "-md-0"
              r["spec"]["clusterName"] = new_cluster_name
              r["spec"]["template"]["spec"]["clusterName"] = new_cluster_name
              r["spec"]["template"]["spec"]["bootstrap"]["configRef"]["name"] = new_cluster_name + "-md-0"
              r["spec"]["template"]["spec"]["infrastructureRef"]["name"] = new_cluster_name + "-md-0"
          if krmfn.match_gvk(r, "controlplane.cluster.x-k8s.io/v1beta1", "KubeadmControlPlane"):
            if r["metadata"]["name"] == "example-control-plane":
              r["metadata"]["name"] = new_cluster_name + "-control-plane"
              r["spec"]["machineTemplate"]["infrastructureRef"]["name"] = new_cluster_name + "-control-plane"
          if krmfn.match_gvk(r, "infrastructure.cluster.x-k8s.io/v1beta1", "OpenStackCluster"):
            if r["metadata"]["name"] == "example":
              r["metadata"]["name"] = new_cluster_name
              r["spec"]["identityRef"]["name"] = new_cluster_name + "-cloud-config"
          if krmfn.match_gvk(r, "infrastructure.cluster.x-k8s.io/v1beta1", "OpenStackMachineTemplate"):
            if r["metadata"]["name"] == "example-control-plane":
              r["metadata"]["name"] = new_cluster_name + "-control-plane"
            if r["metadata"]["name"] == "example-md-0":
              r["metadata"]["name"] = new_cluster_name + "-md-0"

  set_values(ctx.resource_list["items"])
